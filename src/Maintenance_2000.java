
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PHD
 */
public class Maintenance_2000 extends javax.swing.JFrame {
    String serial_number="";
    /**
     * Creates new form Maintenance_2000
     */
    public Maintenance_2000(String aac) {
        
    }
    
    public Maintenance_2000(String serial_no,int x) {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        serial_number=serial_no;
        setTitle("Serial-Number = "+serial_no);
        setVisible(true);
/*                try{
            Connect c = new Connect();
            Connection cn = c.getConnection();
            PreparedStatement psc = null;
            ResultSet rsc = null;
            Statement sc = null;

            DefaultTableModel model = new DefaultTableModel(); 
            model.addColumn("List of Engines.");            
            
            
            String qe1 = "select Serial_Num from M_20k_Bld_Cnctng_Rds Group By Serial_Num";
//            System.out.println("Query is -> "+qe1);
            psc=cn.prepareStatement(qe1);
            rsc = psc.executeQuery();
            while(rsc.next())
            {
                model.addRow(new Object[]{rsc.getString("Serial_Num")});
            }
                JTable jTable1 = new JTable(model){
			public boolean isCellEditable(int rowIndex,int colIndex)
				{
				return false;
				}
			};
        JScrollPane jscr = new JScrollPane(jTable1);
        add(jscr);
        jscr.setBounds(50,100,350,150);
        jTable1.setRowHeight(30);
                }catch(SQLException se){
                    se.printStackTrace();
                }*/
                

        /*
        DefaultTableModel model = new DefaultTableModel(); 
        model.addColumn("Reference");
        String x="VVV1";

        StringTokenizer st = new StringTokenizer(ref,",");
        
        while(st.hasMoreTokens())
        {
        model.addRow(new Object[]{st.nextToken()});
        }
        
        

                JTable jTable1 = new JTable(model){
			public boolean isCellEditable(int rowIndex,int colIndex)
				{
				return false;
				}
			};
        JScrollPane jscr = new JScrollPane(jTable1);
        add(jscr);
        jscr.setBounds(500,100,150,150);
        jTable1.setRowHeight(30);
        */
//Starting Crankpin POR and STBD
                
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setForeground(new java.awt.Color(0, 51, 51));
        jButton1.setText("Crankpin Diameter PORT and STBD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(0, 51, 51));
        jButton2.setText("Blade Connecting Rod");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setForeground(new java.awt.Color(0, 51, 51));
        jButton3.setText("Cylinder Liner Diameter Form");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setForeground(new java.awt.Color(0, 51, 51));
        jButton4.setText("Fork Connecting Rod Form");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setForeground(new java.awt.Color(0, 51, 51));
        jButton5.setText("Linear Bore Wear Measurement With Bearing");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setForeground(new java.awt.Color(0, 51, 51));
        jButton6.setText("Linear Bore Wear Measurement Form");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setForeground(new java.awt.Color(0, 51, 51));
        jButton7.setText("Piston Bore Pin Measurement");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setForeground(new java.awt.Color(0, 51, 51));
        jButton8.setText("Piston Ring Groove Height Form");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(107, 107, 107))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        M_20000_BladeConnectingRod m20 = new M_20000_BladeConnectingRod(serial_number);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        M_20000_Crank_Dia_Por_Stbd porst = new M_20000_Crank_Dia_Por_Stbd(serial_number);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        M_20000_Cylin_Lin_Dia_Form cylin = new M_20000_Cylin_Lin_Dia_Form(serial_number);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        M_20000_Fork_Connecting_Rod_Form forkcon = new M_20000_Fork_Connecting_Rod_Form(serial_number);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        M_20000_Linear_End_Bore_Mesr_With_Bering line = new M_20000_Linear_End_Bore_Mesr_With_Bering(serial_number);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        M_20000_Liner_Bor_Wear_Mesur_Form lin = new M_20000_Liner_Bor_Wear_Mesur_Form(serial_number);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        M_20000_Piston_Bore_Pin_Mesr pis = new M_20000_Piston_Bore_Pin_Mesr(serial_number);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        M_20000_Piston_Ring_Groove_Height_Form mea = new M_20000_Piston_Ring_Groove_Height_Form(serial_number);
    }//GEN-LAST:event_jButton8ActionPerformed

    public void createTemplate_20000(String x){
                    try{
            Connect c = new Connect();
            Connection cn = c.getConnectionL1();
            PreparedStatement psc = null;
            ResultSet rsc = null;
            Statement sc = null;

            //(1)For Blade Connecting rods form.
            sc=cn.createStatement();
            
            sc.execute("insert into M_20k_Bld_Cnctng_Rds_1(Serial_Num,En_Type,Measure_By,Designation,Installation,Date_P,MTU,Remarks)values('" +x+ "','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=8;i++)
                {
                    for(int j=1;j<=2;j++)
                    {
            sc.execute("insert into M_20k_Bld_Cnctng_Rds(Serial_Num,Cyl_Num,Serial_No,Position,Big_A,Big_B,Big_C,Big_Ovality,Small_A,Small_B)values('" +x+ "','A" +i+ "','-','" +j+ "','-','-','-','-','-','-')");
                    }
                }

            //(2)For Crankpin Diameter PORT and STBD
            sc=cn.createStatement();
            
            sc.execute("insert into M_20k_Crank_Dia_Por_Stbd_1(Serial_Num,MTU,Remarks)values('" +x+ "','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=8;i++)
                {
            sc.execute("insert into M_20k_Crank_Dia_Por_Stbd(Serial_Num,Journal_Num,Port_Eng_1,Port_Eng_2,Port_Eng_3,Stbd_Eng_1,Stbd_Eng_2,Stbd_Eng_3)values('" +x+ "','" +i+ " - A','-','-','-','-','-','-')");
            sc.execute("insert into M_20k_Crank_Dia_Por_Stbd(Serial_Num,Journal_Num,Port_Eng_1,Port_Eng_2,Port_Eng_3,Stbd_Eng_1,Stbd_Eng_2,Stbd_Eng_3)values('" +x+ "','" +i+ " - B','-','-','-','-','-','-')");
                }
            
            //(3)For Cylinder Liner Diameter Form Start
            sc=cn.createStatement();    
            sc.execute("insert into M_20k_Cyl_Lin_Dia_Form_1(Serial_cldf,Engine_Type_c,Measure_By_c,Designation_c,Installation_c,Date_P_c,MTU_c,Remarks_c)values('" +x+ "','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=8;i++)
                {
                    for(int j=1;j<=4;j++)
                    {
            sc.execute("insert into M_20k_Cyl_Lin_Dia_Form(Serial_cld,Cyl_Number,Serial_Local,Level,One,Two,Three,Four,Ovality)values('" +x+ "','A" +i+ "','-','" +j+ "','-','-','-','-','-')");
                    }
                }
            //(4)For Liner Bore Wear Measurement Form
            sc=cn.createStatement();    
            sc.execute("insert into M_20k_Liner_Bore_Wear_Meas_Form_1(Serial_No,En_Type_l,Measure_By_l,Designation_l,Installation_l,Date_P_l,MTU_l,Remarks_l)values('" +x+ "','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=16;i++)
                {
            sc.execute("insert into M_20k_Liner_Bore_Wear_Meas_Form(Serial_Eng,Row_Cnt,Cylinder_Num,Ser_Local,Position_1,Position_2,Position_3,Position_4,Max_Measurement)values('" +x+ "','"+i+"','-','-','-','-','-','-','-')");
                }

            //(5)Fork Connecting Rod Form.
            sc=cn.createStatement();    
            sc.execute("insert into M_20k_Fork_Connecting_Rod_1(Serial_Num_F,En_Type_F,Measure_By_F,Designation_F,Installation_F,Date_P_F,MTU_F,Remarks_F)values('new1123','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=8;i++)
                {
                    for(int j=1;j<=2;j++)
                    {
            sc.execute("insert into M_20k_Fork_Connecting_Rod(Serial_Eng,Connecting_Rod,Serial_Num,Location,A,B,C,Ovality)values('" +x+ "','B" +i+ "','-','Inner Diameter-Position " +j+ "','-','-','-','-')");
                    }
                   for(int j=1;j<=2;j++)
                    {
            sc.execute("insert into M_20k_Fork_Connecting_Rod(Serial_Eng,Connecting_Rod,Serial_Num,Location,A,B,C,Ovality)values('" +x+ "','B" +i+ "','-','Outer Block Diameter-Position " +j+ "','-','-','-','-')");
                    }
                   for(int j=1;j<=2;j++)
                    {
            sc.execute("insert into M_20k_Fork_Connecting_Rod(Serial_Eng,Connecting_Rod,Serial_Num,Location,A,B,C,Ovality)values('" +x+ "','B" +i+ "','-','Smallend Diameter-Position " +j+ "','-','-','-','-')");
                    }
                }

            //(6) Linear End Bore Measurement With Bearing
            sc=cn.createStatement();
            sc.execute("insert into M_20k_Large_End_Bore_Mesr_With_Bearing_1(Serial_Num_B,En_Type_B,Measure_By_B,Designation_B,Installation_B,Date_P_B,MTU_B,Remarks_B)values('" +x+ "','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            //Port Engine
            for(int i=1;i<=8;i++)
                {
            sc.execute("insert into M_20k_Large_End_Bore_Mesr_With_Bearing(Serial_Main,Eng_Type,Location,Cyl_Num,Position_1,Position_2)values('" +x+ "','Port Engine','Fork Rod','B" +i+ "','-','-')");
                }
            for(int i=1;i<=8;i++)
                {
            sc.execute("insert into M_20k_Large_End_Bore_Mesr_With_Bearing(Serial_Main,Eng_Type,Location,Cyl_Num,Position_1,Position_2)values('" +x+ "','Port Engine','Blade Rod','A" +i+ "','-','-')");
                }
            
            //Starboard Engine
            for(int i=1;i<=8;i++)
                {
            sc.execute("insert into M_20k_Large_End_Bore_Mesr_With_Bearing(Serial_Main,Eng_Type,Location,Cyl_Num,Position_1,Position_2)values('" +x+ "','Starboard Engine','Fork Rod','B" +i+ "','-','-')");
                }
            for(int i=1;i<=8;i++)
                {
            sc.execute("insert into M_20k_Large_End_Bore_Mesr_With_Bearing(Serial_Main,Eng_Type,Location,Cyl_Num,Position_1,Position_2)values('" +x+ "','Starboard Engine','Blade Rod','A" +i+ "','-','-')");
                }

            //(7) Piston Bore Pin Measurement Form
            sc=cn.createStatement();    
            sc.execute("insert into M_20k_Piston_Bore_Pin_Mesr_1(Serial_Num,En_Type,Measure_By,Designation,Installation,Date_P,MTU,Remarks)values('new1123','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=16;i=i+2)
                {
            sc.execute("insert into M_20k_Piston_Bore_Pin_Mesr(Ser_Main,Row_Cnt,Cylin_Num,Serial_No,Position,Piston_Gud_Pin_Bos_1,Piston_Gud_Pin_Bos_2,Gudg_Pin_Dia_1,Gudg_Pin_Dia_2,Gudg_Pin_Dia_3,Clearance)values('"+x+"','"+i+"','-','-','A','-','-','-','-','-','-')");
            int qy = i+1;
            sc.execute("insert into M_20k_Piston_Bore_Pin_Mesr(Ser_Main,Row_Cnt,Cylin_Num,Serial_No,Position,Piston_Gud_Pin_Bos_1,Piston_Gud_Pin_Bos_2,Gudg_Pin_Dia_1,Gudg_Pin_Dia_2,Gudg_Pin_Dia_3)values('"+x+"','"+qy+"','-','-','B','-','-','-','-','-')");
                }

            //(8) Piston Ring Groove Height Form
            sc=cn.createStatement();
            sc.execute("insert into M_20k_Piston_Ring_Groove_Height_1(Serial_No,En_Type_P,Measure_By_P,Designation_P,Installation_P,Date_P,MTU_P,Remarks_P)values('"+x+"','-','-','-','-','-','-','-')");
            sc.close();
            sc = cn.createStatement();
            for(int i=1;i<=32;i=i+4)
                {
            sc.execute("insert into M_20k_Piston_Ring_Groove_Height(Serial_Num,Row_Cnt,Cylinder_No,Serial,Measuring_Points,Piston_Ring_No_1,Piston_Ring_No_2,Piston_Ring_No_3,Piston_Ring_No_4,Piston_Ring_No_5)values('"+x+"','"+i+"','-','-','O','-','-','-','-','-')");
            int qy = i+1;
            sc.execute("insert into M_20k_Piston_Ring_Groove_Height(Serial_Num,Row_Cnt,Cylinder_No,Serial,Measuring_Points,Piston_Ring_No_1,Piston_Ring_No_2,Piston_Ring_No_3,Piston_Ring_No_4,Piston_Ring_No_5)values('"+x+"','"+qy+"','-','-','A','-','-','-','-','-')");
            int qy1 = qy+1;
            sc.execute("insert into M_20k_Piston_Ring_Groove_Height(Serial_Num,Row_Cnt,Cylinder_No,Serial,Measuring_Points,Piston_Ring_No_1,Piston_Ring_No_2,Piston_Ring_No_3,Piston_Ring_No_4,Piston_Ring_No_5)values('"+x+"','"+qy1+"','-','-','B','-','-','-','-','-')");
            int qy2 = qy1+1;
            sc.execute("insert into M_20k_Piston_Ring_Groove_Height(Serial_Num,Row_Cnt,Cylinder_No,Serial,Measuring_Points,Piston_Ring_No_1,Piston_Ring_No_2,Piston_Ring_No_3,Piston_Ring_No_4,Piston_Ring_No_5)values('"+x+"','"+qy2+"','-','-','C','-','-','-','-','-')");
                }



            System.out.println("Insert Executed Successfully");
            }catch(SQLException vv){
                vv.printStackTrace();
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maintenance_2000.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maintenance_2000.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maintenance_2000.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maintenance_2000.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Maintenance_2000("new1123",1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
